name: Build-Publish

on:
  push:

env:
  REGISTRY_IMAGE: gitea.fabricio.dev/${{ github.repository }}

# based on
# https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get short commit SHA
        run: echo "COMMIT=$(git rev-parse --short HEAD)" >>"$GITHUB_ENV"

      - name: Get environment from a file
        run: cat .env >>"$GITHUB_ENV"

      # Install docker
      - name: Install Docker
        run: curl -fsSL https://get.docker.com | sh

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/metadata-action
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{ is_default_branch }}
            # branch
            type=ref,event=branch
            # version
            type=raw,value=${{ env.VERSION }},enable={{ is_default_branch }}
            # commit
            type=sha,prefix=

      # https://github.com/docker/login-action
      - name: Login to Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: gitea.fabricio.dev
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      # https://github.com/docker/build-push-action
      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          provenance: false
          no-cache: ${{ github.event.inputs.no-cache == 'true' }}
          build-args: |
            BRANCH=${{ env.BRANCH }}
            VERSION=${{ env.VERSION }}
            COMMIT=${{ env.COMMIT }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}:${{ github.ref_name }}
          cache-to: type=inline
